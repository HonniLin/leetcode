/*
比如当前长度是n，我们知道每个相同的起始元素对应(n-1)!个permutation，也就是(n-1)!个permutation后会换一个起始元素。
因此，只要当前的k进行(n-1)!取余，得到的数字就是当前剩余数组的index，如此就可以得到对应的元素。如此递推直到数组中没有元素结束。
实现中我们要维护一个数组来记录当前的元素，每次得到一个元素加入结果数组，然后从剩余数组中移除。
*/

class Solution {
public:
    string getPermutation(int n, int k) {
        vector<int> nums;
        string res = "";
        int index, fac = 1, r = n-1;
        k--;
        for(int i = 2; i < n; ++i) fac = fac * i;
        for(int i = 1; i <= n; ++i) nums.push_back(i);
        
        while(r>=0)
        {
            index = k / fac;
            k %= fac;
            res += nums[index] + '0';
            nums.erase(nums.begin() + index);
            if(r)
            {
                fac /= r;
            }
            r--;
        }
        return res;
    }
};
