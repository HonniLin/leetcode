/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode(int x) : val(x), next(NULL) {}
 * };
 */
class Solution {
public:
    ListNode* addTwoNumbers(ListNode* l1, ListNode* l2) {
        if(l1 == NULL) return l2;
        if(l2 == NULL) return l1;
        
        ListNode *ans = new ListNode(0);
        ListNode *ret = ans;
        int cnt = 0;
        ListNode *tmp;
        int val1 = 0, val2 = 0;
        while(l1 != NULL || l2 != NULL)
        {
            val1 = l1 == NULL ? 0 : l1->val;
            val2 = l2 == NULL ? 0 : l2->val;
            int val = (val1 + val2 + cnt) % 10;
            cnt = (val1 + val2 + cnt) / 10;
            
            tmp = new ListNode(val);
            ans->next = tmp;
            ans = ans->next;
            
            if(l1 != NULL)
                l1 = l1->next;
            if(l2 != NULL)
                l2 = l2->next;
            
        }
        
        if(cnt != 0)
        {
            tmp = new ListNode(cnt);
            ans->next = tmp;
        }
        return ret->next;
    }
};
