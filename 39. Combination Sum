/*回溯算法*/

class Solution {
public:
    void work(vector<int>& candidates, int t, vector<vector<int>>& ans, vector<int>& tmp, int begin)
    {
        if(t == 0)
        {
            ans.push_back(tmp);
        }
        for(int i = begin; i < candidates.size(); ++i)
        {
            if(t - candidates[i] >= 0)
            {
                tmp.push_back(candidates[i]);
                work(candidates, t - candidates[i], ans, tmp, i);
                tmp.pop_back();
            }
        }
    }
    
    vector<vector<int>> combinationSum(vector<int>& candidates, int target) {
        vector<int> tmp;
        vector<vector<int>> ans;
        work(candidates, target, ans, tmp, 0);
        return ans;
    }
};
