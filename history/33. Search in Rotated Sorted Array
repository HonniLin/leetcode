/*
二分
*/

#include <cstdio>
#include <iostream>
#include <vector>

using namespace std;

class Solution 
{
public:
    int search(vector<int>& nums, int target) {
        int mid, lef, rig;
        lef = 0;
        rig = nums.size() - 1;
        while(lef <= rig)
        {
            mid = (rig + lef) / 2;
            if(nums[mid] == target)
            {
            	return mid;
            }
			// mid 大于 左
            if(nums[mid] >= nums[lef])
            {
            	if(target >= nums[lef] && target < nums[mid])
            	{
            		rig = mid - 1;
            	}
            	else
            	{
            		lef = mid + 1;
            	}
            }
            else 
            {
            	if(target > nums[mid] && target <= nums[rig])
            	{
            		lef = mid + 1;
            	}
            	else 
            	{
            		rig = mid - 1;
            	}
            }
        }
        return -1;
    }
};

int main(int argc, char const *argv[])
{
	Solution sol;
	std::vector<int> v;
	v.push_back(3);
	v.push_back(4);
	v.push_back(0);
	v.push_back(1);
	v.push_back(2);
	int ans = sol.search(v, 0);
	printf("%d\n", ans);
	return 0;
}
